{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Tailspin",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"include": "#matcher"
		},
		{
			"include": "#control"
		},
		{
			"include": "#string"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#inline-function"
		},
		{
			"include": "#structure-literal"
		},
		{
			"include": "#definition"
		},
		{
			"include": "#number"
		}
	],
	"repository": {
		"comment": {
			"patterns": [{
				"name": "comment.line.double-slash.tailspin",
				"match": "//[^\\n]*"
			}]
		},
		"control": {
			"patterns": [{
				"name": "keyword.control.tailspin",
				"match": "(->|#|\\b(when|do|rule)\\b|!|\\.\\.\\.)"
			}]
		},
		"string-interpolation": {
			"patterns": [
				{
					"name": "constant.character",
					"match": "\\$#\\d+;"
				},
				{
					"name": "meta.string.interpolation.tailspin",
					"begin": "(\\$)(:|(\\w+))?",
					"beginCaptures": {"1": {"name": "keyword.other.tailspin"}, "3": {"name": "variable.name.tailspin"}},
					"end": ";",
					"endCaptures": {"0": {"name": "keyword.other.tailspin"}},
					"patterns": [{"include": "$self"}]
				}
			]
		},
		"string": {
			"begin": "'[^\\$']*",
			"end": "((?<=;)[^\\$']*')|'|^[^\\$']*'",
			"captures": {"0": {"name": "string.quoted.single.tailspin"}},
			"patterns": [
				{
					"match": "\\$\\$",
					"name": "string.quoted.single.tailspin"
				},
				{
					"include": "#string-interpolation"
				},
				{
					"match": "[^\\$]+",
					"name": "string.quoted.single.tailspin"
				}
			]
		},
		"functions": {
			"name": "meta.function.tailspin",
			"begin": "\\b(templates|composer|processor)\\b\\s*(\\w+)\\b",
			"end": "\\b(end)\\b\\s*(\\w+)\\b",
			"captures": {"1": {"name":"storage.type.tailspin"}, "2": {"name": "entity.name.function.tailspin"}},
			"patterns": [{"include": "$self"}]
		},
		"inline-function": {
			"name": "meta.function.tailspin",
			"begin": "\\\\(\\w+)?(\\[\\s*\\w+(\\s*;\\s*\\w+)*\\s*\\])?\\(",
			"end": "\\\\(\\1)\\)",
			"captures": {"1": {"name": "entity.name.function.tailspin"}},
			"patterns": [{"include": "$self"}]
		},
		"matcher": {
			"name": "meta.match.tailspin",
			"begin": "<",
			"end": ">",
			"patterns": [
				{
					"include": "#such-that"
				},
				{
					"name": "meta.match.equality.tailspin",
					"begin": "(?:\\s*)=",
					"end": "\\||(?=[?>])",
					"patterns": [
						{
							"include": "#string"
						},
						{
							"include": "#structure-literal"
						},
						{
							"include": "#array-literal"
						},
						{
							"include": "#number"
						},
						{
							"include": "#reference"
						}
					]
				},
				{
					"name": "meta.match.type.tailspin",
					"begin": "(?<=[<|])",
					"end": "\\||(?=[?>])",
					"patterns": [
						{
							"name": "meta.match.type.string.tailspin",
							"begin": "'",
							"end": "'",
							"captures": {"0":{"name": "string.regexp.tailspin"}},
							"patterns": [
								{
									"match": "\\$\\$|''",
									"name": "string.regexp.tailspin"
								},
								{
									"include": "#string-interpolation"
								},
								{
									"match": "[^\\$']+",
									"name": "string.regexp.tailspin"
								}
							]
						},
						{
							"name": "meta.match.type.structure.tailspin",
							"begin": "{",
							"end": "}",
							"patterns": [
							]
						},
						{
							"name": "meta.match.type.array.tailspin",
							"begin": "\\[",
							"end": "\\]",
							"patterns": [
							]
						},
						{
							"name": "meta.match.type.range.tailspin",
							"match": "(-?\\d+~?)?(\\.\\.)(~?-?\\d+)?"
						}
					]
				}
			]
		},
		"such-that": {
			"name": "meta.match.suchthat.tailspin",
			"begin": "\\?\\(",
			"end": "\\)"
		},
		"key": {
			"name": "variable.other.key.tailspin",
			"match": "\\w+\\s*:"
		},
		"structure-literal": {
			"name": "meta.structureliteral.tailspin",
			"begin": "\\{",
			"beginCaptures": {
				"0": {
					"name": "punctuation.definition.block.tailspin"
				}
			},
			"end": "\\}",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.block.tailspin"
				}
			},
			"patterns": [
				{
					"include": "#key"
				},
				{
					"name": "meta.structureliteral.value.tailspin",
					"begin": "(?<=:)",
					"end": "(?=[,}])",
					"patterns": [{"include": "$self"}]
				}
			]
		},
		"definition": {
			"name": "meta.definition.tailspin",
			"begin": "\\bdef\\b",
			"beginCaptures": {
				"0": {
					"name": "storage.modifier.definition.tailspin"
				}
			},
			"end": ";",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.end.tailspin"
				}
			},
			"patterns": [
				{
					"include": "#key"
				},
				{
					"name": "meta.definition.value.tailspin",
					"begin": "(?<=:)",
					"end": "(?=;)",
					"patterns": [{"include": "$self"}]
				}
			]
		},
		"number": {
			"match": "\\d+",
			"captures": {"0": {"name": "constant.numeric.integer.tailspin"}}
		}
	},
	"scopeName": "source.tailspin"
}